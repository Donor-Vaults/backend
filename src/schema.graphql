# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EnumKYCFieldUpdateOperationsInput {
  set: KYCStatus
}

input EnumKYCFilter {
  equals: KYCStatus
  in: [KYCStatus!]
  not: NestedEnumKYCFilter
  notIn: [KYCStatus!]
}

input EnumRoleFieldUpdateOperationsInput {
  set: RoleStatus
}

input EnumRoleFilter {
  equals: RoleStatus
  in: [RoleStatus!]
  not: NestedEnumRoleFilter
  notIn: [RoleStatus!]
}

input EnumSTATUSFieldUpdateOperationsInput {
  set: STATUS
}

input EnumSTATUSFilter {
  equals: STATUS
  in: [STATUS!]
  not: NestedEnumSTATUSFilter
  notIn: [STATUS!]
}

type FundRaiser {
  benificiary: String!
  category: String!
  contract_address: String
  createdAt: DateTime!
  featuredImage: String!
  firstName: String!
  fundraiserDescription: String!
  fundraiserName: String!
  fundraisers_status: STATUS!
  goalAmount: Int!
  id: ID!
  lastName: String!
  supportingDocuments: [String!]
  updatedAt: DateTime!
  userId: String!
}

input FundRaiserCreateInput {
  benificiary: String!
  category: String!
  contract_address: String
  createdAt: DateTime
  featuredImage: String!
  firstName: String!
  fundraiserDescription: String!
  fundraiserName: String!
  fundraisers_status: STATUS
  goalAmount: Int!
  id: String
  lastName: String!
  updatedAt: DateTime
}

input FundRaiserListRelationFilter {
  every: FundRaiserWhereInput
  none: FundRaiserWhereInput
  some: FundRaiserWhereInput
}

input FundRaiserUpdateInput {
  benificiary: StringFieldUpdateOperationsInput
  category: StringFieldUpdateOperationsInput
  contract_address: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  featuredImage: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  fundraiserDescription: StringFieldUpdateOperationsInput
  fundraiserName: StringFieldUpdateOperationsInput
  fundraisers_status: EnumSTATUSFieldUpdateOperationsInput
  goalAmount: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  supportingDocuments: FundRaiserUpdatesupportingDocumentsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FundRaiserUpdatesupportingDocumentsInput {
  push: [String!]
  set: [String!]
}

input FundRaiserWhereInput {
  AND: [FundRaiserWhereInput!]
  NOT: [FundRaiserWhereInput!]
  OR: [FundRaiserWhereInput!]
  benificiary: StringFilter
  category: StringFilter
  contract_address: StringNullableFilter
  createdAt: DateTimeFilter
  featuredImage: StringFilter
  firstName: StringFilter
  fundraiserDescription: StringFilter
  fundraiserName: StringFilter
  fundraisers_status: EnumSTATUSFilter
  goalAmount: IntFilter
  id: StringFilter
  lastName: StringFilter
  supportingDocuments: StringNullableListFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input FundRaiserWhereUniqueInput {
  id: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

"""User KYC Status"""
enum KYC {
  APPROVED
  NOT_INITIALIZED
  ONGOING
  REJECTED
  SUBMITTED
}

enum KYCStatus {
  APPROVED
  NOT_INITIALIZED
  ONGOING
  REJECTED
  SUBMITTED
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createOneCampaign(data: FundRaiserCreateInput!): FundRaiser
  login(data: LoginInput!): Auth!
  passwordresetRequest(data: PasswordRequestInput!): Auth!
  passwordresetRequestByLink(data: PasswordRequestByLinkInput!): PasswordResetByLink!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateCampaign(data: FundRaiserUpdateInput!, where: FundRaiserWhereUniqueInput!): FundRaiser!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): USER!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumKYCFilter {
  equals: KYCStatus
  in: [KYCStatus!]
  not: NestedEnumKYCFilter
  notIn: [KYCStatus!]
}

input NestedEnumRoleFilter {
  equals: RoleStatus
  in: [RoleStatus!]
  not: NestedEnumRoleFilter
  notIn: [RoleStatus!]
}

input NestedEnumSTATUSFilter {
  equals: STATUS
  in: [STATUS!]
  not: NestedEnumSTATUSFilter
  notIn: [STATUS!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type NomineeModel {
  createdAt: DateTime!
  id: String!
  name: String!
  relationship: String!
  updatedAt: DateTime!
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input PasswordRequestByLinkInput {
  email: String!
}

input PasswordRequestInput {
  newPassword: String!
}

type PasswordResetByLink {
  accessToken: String!
  link: String!
}

type Query {
  fundraisers(where: FundRaiserWhereInput!): [FundRaiser!]!
  me: USER!
  users(where: UserWhereInput!): [USER!]!
}

enum QueryMode {
  default
  insensitive
}

"""User role"""
enum Role {
  ADMIN
  USER
}

enum RoleStatus {
  ADMIN
  USER
}

enum STATUS {
  APPROVED
  NOT_INITILAIZED
  PENDING
  REJECTED
}

input SignupInput {
  country: String
  date_of_birth: DateTime
  email: String
  mobile_number: String
  name: String
  password: String!
  selfie: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

type USER {
  country: String
  createdAt: DateTime!
  date_of_birth: DateTime
  email: String
  fundraisers: [FundRaiser!]
  id: ID!
  isVerified: Boolean!
  kyc_status: KYCStatus!
  mobile_number: String
  name: String
  password: String!
  selfie: String
  updatedAt: DateTime!
  user_role: RoleStatus!
}

type User {
  alternate_mobile_number: String
  createdAt: DateTime!
  date_of_birth: DateTime
  demat_account: String
  email: String
  father_or_husband_name: String
  id: String!
  kyc: KYC!
  mobile_number: String
  name: String
  nominee: NomineeModel
  role: Role!
  updatedAt: DateTime!
}

input UserUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date_of_birth: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  kyc_status: EnumKYCFieldUpdateOperationsInput
  mobile_number: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  selfie: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user_role: EnumRoleFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  country: StringNullableFilter
  createdAt: DateTimeFilter
  date_of_birth: DateTimeNullableFilter
  email: StringNullableFilter
  fundraisers: FundRaiserListRelationFilter
  id: StringFilter
  isVerified: BoolFilter
  kyc_status: EnumKYCFilter
  mobile_number: StringNullableFilter
  name: StringNullableFilter
  password: StringFilter
  selfie: StringNullableFilter
  updatedAt: DateTimeFilter
  user_role: EnumRoleFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
